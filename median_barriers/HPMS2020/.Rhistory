count()
highways_sum$pct <- highways_sum$n / sum(highways_sum$n) *100
highways_sum
deer1 <- deer %>%
filter(condition %in% c("Dead", "Injured"))
deer <- clipped_roadkill %>%
filter(animal == "Mule (or Black tailed) Deer")
deer1 <- deer %>%
filter(condition %in% c("Dead", "Injured"))
colnames(deer)
unique(deer$AADT)
install.packages("classInt")
library(classInt)
install.packages("classInt")
library(classInt)
# Set number of classes (e.g., 5)
num_classes <- 5
# Calculate natural breaks for AADT
breaks <- classIntervals(deer$AADT, n = num_classes, style = "jenks")
# Cut data using these breaks to create AADT classes
deer$AADT_class <- cut(deer$AADT, breaks = breaks$brks, include.lowest = TRUE)
# Fit a Poisson regression model
poisson_model <- glm(counts ~ MEDIAN_TYPE + AADT, family = poisson(link = "log"), data = clipped_roadkill)
glm_df <- deer %>%
group_by(predictor_vars) %>%
summarize(count = n(), groups 'drop')
glm_df <- deer %>%
group_by(predictor_vars) %>%
summarize(count = n(), groups = 'drop')
library(dplyr)
glm_df <- deer %>%
group_by(predictor_vars) %>%
summarize(count = n(), groups = 'drop')
predictor_vars <- c("MEDIAN_TYPE", "AADT", "MEDIAN_WIDTH")
glm_df <- deer %>%
group_by(predictor_vars) %>%
summarize(count = n(), groups = 'drop')
glm_df <- deer %>%
group_by("MEDIAN_TYPE", "AADT", "MEDIAN_WIDTH") %>%
summarize(count = n(), groups = 'drop')
glm_df <- deer %>%
as.data.frame()
glm_df <- deer %>%
as.data.frame() %>%
group_by("MEDIAN_TYPE", "AADT", "MEDIAN_WIDTH") %>%
summarize(count = n(), groups = 'drop')
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry)
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by("MEDIAN_TYPE", "AADT", "MEDIAN_WIDTH") %>%
summarize(count = n(), groups = 'drop')
View(glm_df)
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by("MEDIAN_TYPE", "AADT", "MEDIAN_WIDTH") %>%
summarize(count = n())
View(glm_df)
deer$roadkill_count <- 1
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by("MEDIAN_TYPE", "AADT", "MEDIAN_WIDTH") %>%
summarize(roadkill_count = n())
View(glm_df)
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by("MEDIAN_TYPE") %>%
summarize(roadkill_count = n())
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by("MEDIAN_TYPE", "AADT") %>%
summarize(roadkill_count = n())
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by("MEDIAN_TYPE", "AADT") %>%
summarize()
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by("MEDIAN_TYPE", "AADT") %>%
summarize(n())
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by("MEDIAN_TYPE", "AADT") %>%
summarize(roadkill_count = n())
head(glm_df)
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by(MEDIAN_TYPE, AADT) %>%
summarize(roadkill_count = n())
head(glm_df)
deer <- deer %>%
mutate(AADT_scaled = scale(AADT))
View(deer)
deer <- deer %>%
mutate(AADT_bin = cut(AADT, breaks = seq(0, max(AADT), by = 500), include.lowest = TRUE))
deer <- deer %>%
mutate(AADT_bin = cut(AADT, breaks = seq(0, max(AADT), by = 5000), include.lowest = TRUE))
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by(MEDIAN_TYPE, AADT) %>%
summarize(roadkill_count = n())
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by(MEDIAN_TYPE, AADT_bin) %>%
summarize(roadkill_count = n())
# Fit a Poisson regression model
poisson_model <- glm(counts ~ MEDIAN_TYPE + AADT_bin, family = poisson(link = "log"), data = clipped_roadkill)
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ MEDIAN_TYPE + AADT_bin, family = poisson(link = "log"), data = clipped_roadkill)
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ MEDIAN_TYPE + AADT_bin, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
deer <- deer %>%
mutate(AADT_bin = cut(AADT, breaks = seq(0, max(AADT), by = 15000), include.lowest = TRUE))
deer$roadkill_count <- 1
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by(MEDIAN_TYPE, AADT_bin) %>%
summarize(roadkill_count = n())
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ MEDIAN_TYPE + AADT_bin, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ MEDIAN_TYPE, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by(MEDIAN_TYPE) %>%
summarize(roadkill_count = n())
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ MEDIAN_TYPE, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by(MEDIAN_TYPE, MEDIAN_WIDTH) %>%
summarize(roadkill_count = n())
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ MEDIAN_TYPE, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ MEDIAN_TYPE + MEDIAN_WIDTH, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
deer$median_type <- as.factor(deer$MEDIAN_TYPE)
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by(median_type, MEDIAN_WIDTH) %>%
summarize(roadkill_count = n())
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ median_type + MEDIAN_WIDTH, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by(median_type) %>%
summarize(roadkill_count = n())
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ median_type, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
deer <- deer %>%
mutate(AADT_bin = cut(AADT, breaks = seq(0, max(AADT), by = 50000), include.lowest = TRUE))
deer$median_type <- as.factor(deer$MEDIAN_TYPE)
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by(median_type, AADT_bin) %>%
summarize(roadkill_count = n())
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by(median_type, AADT_bin) %>%
summarize(roadkill_count = n())
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ median_type, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
deer$MEDIAN_TYPE <- as.factor(deer$MEDIAN_TYPE)
# Plot histogram for clipped_roadkill
hist(clipped_roadkill$MEDIAN_TYPE,
main = "Clipped Roadkill MEDIAN_TYPE",
xlab = "MEDIAN_TYPE",
col = "lightblue",
border = "black")
# Plot histogram for highways
hist(highways$MEDIAN_TYPE,
main = "Highways MEDIAN_TYPE",
xlab = "MEDIAN_TYPE",
col = "lightgreen",
border = "black")
deer$MEDIAN_TYPE <- as.factor(deer$MEDIAN_TYPE) %>%
filter(!MEDIAN_TYPE %in% (3, 4. 5))
deer$MEDIAN_TYPE <- as.factor(deer$MEDIAN_TYPE) %>%
filter(!MEDIAN_TYPE %in% (3, 4, 5))
deer$MEDIAN_TYPE <- as.factor(deer$MEDIAN_TYPE) %>%
filter(!MEDIAN_TYPE %in% ("3", "4", "5"))
deer$MEDIAN_TYPE <- as.factor(deer$MEDIAN_TYPE) %>%
filter(!MEDIAN_TYPE %in% ("3", "4", "5"))
deer <- clipped_roadkill %>%
filter(animal == "Mule (or Black tailed) Deer")
deer$MEDIAN_TYPE <- as.factor(deer$MEDIAN_TYPE) %>%
filter(!MEDIAN_TYPE %in% ("3", "4", "5"))
deer <- deer %>%
mutate(MEDIAN_TYPE = as.factor(MEDIAN_TYPE)) %>%
filter(!MEDIAN_TYPE %in% c("3", "4", "5"))
deer <- deer %>%
as.data.frame()
deer <- deer %>%
as.data.frame() %>%
mutate(MEDIAN_TYPE = as.factor(MEDIAN_TYPE)) %>%
filter(!MEDIAN_TYPE %in% c("3", "4", "5"))
deer <- deer %>%
as.data.frame() %>%
filter(!MEDIAN_TYPE %in% c("3", "4", "5"))
deer <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
mutate(MEDIAN_TYPE = as.factor(MEDIAN_TYPE)) %>%
filter(!MEDIAN_TYPE %in% c("3", "4", "5"))
deer$roadkill_count <- 1
glm_df <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
group_by(median_type, AADT_bin) %>%
summarize(roadkill_count = n())
glm_df <- deer %>%
as.data.frame() %>%
#select(!geometry) %>%
group_by(median_type, AADT_bin) %>%
summarize(roadkill_count = n())
glm_df <- deer %>%
as.data.frame() %>%
#select(!geometry) %>%
group_by(median_type) %>%
summarize(roadkill_count = n())
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ median_type, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
deer$roadkill_count <- 1
glm_df <- deer %>%
as.data.frame() %>%
#select(!geometry) %>%
group_by(MEDIAN_TYPE) %>%
summarize(roadkill_count = n())
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ MEDIAN_TYPE, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
deer <- deer %>%
mutate(AADT_bin = cut(AADT, breaks = seq(0, max(AADT), by = 50000), include.lowest = TRUE))
deer <- deer %>%
as.data.frame() %>%
select(!geometry) %>%
mutate(MEDIAN_TYPE = as.factor(MEDIAN_TYPE)) %>%
filter(!MEDIAN_TYPE %in% c("3", "4", "5"))
deer$roadkill_count <- 1
glm_df <- deer %>%
as.data.frame() %>%
#select(!geometry) %>%
group_by(MEDIAN_TYPE, AADT_bin) %>%
summarize(roadkill_count = n())
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ MEDIAN_TYPE, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
# Fit a Poisson regression model
poisson_model <- glm(roadkill_count ~ MEDIAN_TYPE + AADT_bin, family = poisson(link = "log"), data = glm_df)
summary(poisson_model)
# Generate random points
number_of_points <- 100  # Specify how many random points you want
random_points <- st_sample(highways, size = number_of_points, type = "random")
library(sf)
random_points <- st_sample(highways, size = number_of_points, type = "random")
typeof(highways)
highways <- st_read("D:\\Downloads\\HPMS_CA_2020_Highways.gpkg")
highways <- st_transform(highways, crs = 3310) %>% st_zm()
# Generate random points
number_of_points <- 100  # Specify how many random points you want
random_points <- st_sample(highways, size = number_of_points, type = "random")
print(highways)
summary(highways)
?st_sample
seed(123)
setseed(123)
set.seed(123)
random_points <- st_sample(highways, size = number_of_points, type = "random")
View(highways)
typeof(highways)
str(highways)
class(highways)
# Generate random points
random <- st_read("D:\\Downloads\\CA_Random_Highways.gpkg")
# Clip roadkill points to the 50-meter buffer
clipped_random <- st_intersection(random, highways_buffer)
View(clipped_random)
# Clip roadkill points to the 50-meter buffer
clipped_random <- st_intersection(random, highways)
# Clip roadkill points to the 50-meter buffer
clipped_random <- st_join(random, highways, join = st_intersects)
View(clipped_random)
colnames(clipped_random)
library(sf)
library(dplyr)
library(lubridate)
all <- st_read("D:\\General Data\\Road Features\\HPMS_CA_2020.gdb.zip") %>%
as.data.frame()
all <- st_read("H:\\General Data\\Road Features\\HPMS_CA_2020.gdb.zip") %>%
as.data.frame()
# Generate random points
random <- st_read("D:\\Downloads\\CA_HPMS_2020_SHS.gpkg")
highways <- st_read("D:\\Downloads\\CA_HPMS_2020_SHS.gpkg")
roadkill <- st_read("H:\\General Data\\Roadkill\\CROS-CHIPS-20240410-ND-All\\CROS-CHIPS-20240410-ND-All.shp")
length(unique(highways$ROUTE_NAME))
length(unique(highways$ROUTE_NUMBER))
length(unique(highways$Route_ID))
unique(highways$NHS)
# Transform both layers to EPSG 3310 (California Albers)
roadkill2020 <- st_transform(roadkill2020, crs = 3310) %>% st_zm()
roadkill2020 <- roadkill %>%
mutate(observatio = ymd_hms(observatio)) %>%
filter(year(observatio) == 2020)
# Transform both layers to EPSG 3310 (California Albers)
roadkill2020 <- st_transform(roadkill2020, crs = 3310) %>% st_zm()
highways <- st_transform(highways, crs = 3310) %>% st_zm()
# Create a 50-meter buffer around highways
highways_buffer <- st_buffer(highways, dist = 50)
# Clip roadkill points to the 50-meter buffer
clipped_roadkill <- st_intersection(roadkill2020, highways_buffer)
View(clipped_roadkill)
unique(clipped_roadkill$Route_ID)
unique(clipped_roadkill$ROUTE_NAME)
clipped_roadkill <- clipped_roadkill %>%
filter(!is.na(Route_ID))
unique(clipped_roadkill$Route_ID)
roadkill_sum <- clipped_roadkill %>%
as.data.frame() %>%
filter(!is.na(MEDIAN_TYPE)) %>%
group_by(MEDIAN_TYPE) %>%
count()
roadkill_sum$pct <- roadkill_sum$n / sum(roadkill_sum$n) *100
roadkill_sum
highways_sum <- highways %>%
as.data.frame() %>%
filter(!is.na(MEDIAN_TYPE)) %>%
group_by(MEDIAN_TYPE) %>%
count()
highways_sum$pct <- highways_sum$n / sum(highways_sum$n) *100
highways_sum
roadkill_df %>% clipped_roadkill %>%
mutate(roadkill == 0)
roadkill_df <- clipped_roadkill %>%
mutate(roadkill == 0)
roadkill_df <- clipped_roadkill %>%
as.data.frame() %>%
mutate(roadkill == 0)
roadkill_df <- clipped_roadkill %>%
as.data.frame() %>%
mutate(roadkill = 0)
View(roadkill_df)
roadkill_df <- clipped_roadkill %>%
as.data.frame() %>%
mutate(roadkill = 1)
random_df <- highways %>%
as.data.frame() %>%
mutate(roadkill = 0)
View(random_df)
ncol(random_df)
colnames(random_df)
predictors <- c(AADT, MEDIAN_TYPE, MEDIAN_WIDTH, LANE_WIDTH)
predictors <- list(AADT, MEDIAN_TYPE, MEDIAN_WIDTH, LANE_WIDTH)
predictors <- c("AADT", "MEDIAN_TYPE", "MEDIAN_WIDTH", "LANE_WIDTH")
predictors <- c("AADT", "MEDIAN_TYPE", "MEDIAN_WIDTH", "LANE_WIDTH", "roadkill")
roadkill_df <- clipped_roadkill %>%
as.data.frame() %>%
mutate(roadkill = 1) %>%
select(all_of(predictors))
View(roadkill_df)
# Generate random points
random <- st_read("D:\\Downloads\\CA_HPMS_2020_SHS.gpkg")
random_df <- highways %>%
as.data.frame() %>%
mutate(roadkill = 0) %>%
select(all_of(predictors))
View(random_df)
View(roadkill_df)
colnames(clipped_roadkill)
?glm
glm_df <- rbind(roadkill_df, random_df)
View(glm_df)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ MEDIAN_TYPE + AADT, family = binomial(link = "logit"), data = glm_df)
summary(poisson_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ MEDIAN_TYPE + AADT, family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ MEDIAN_TYPE, family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ 1, family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ MEDIAN_WIDTH, family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
glm_df <- rbind(roadkill_df, random_df) %>%
filter(!MEDIAN_TYPE == 4)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ MEDIAN_TYPE + , family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ MEDIAN_TYPE , family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
glm_df <- rbind(roadkill_df, random_df) %>%
filter(MEDIAN_TYPE != 4)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ MEDIAN_TYPE , family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE) , family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
glm_df <- rbind(roadkill_df, random_df)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE) , family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE) + MEDIAN_WIDTH, family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ 1 + as.factor(MEDIAN_TYPE) + MEDIAN_WIDTH, family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE) + MEDIAN_WIDTH, family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE) + MEDIAN_WIDTH + AADT, family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE), family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE) + MEDIAN_WIDTH + AADT, family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
glm_summary <- glm_df %>%
group_by(MEDIAN_TYPE) %>%
count()
View(glm_summary)
glm_summary <- glm_df %>%
group_by(roadkill, MEDIAN_TYPE) %>%
count()
View(glm_summary)
glm_df <- rbind(roadkill_df, random_df) %>%
filter(MEDIAN_TYPE != 3)
glm_summary <- glm_df %>%
group_by(roadkill, MEDIAN_TYPE) %>%
count()
glm_df <- rbind(roadkill_df, random_df) %>%
filter(MEDIAN_TYPE != 3) %>%
filter(MEDIAN_TYPE != 4)
glm_summary <- glm_df %>%
group_by(roadkill, MEDIAN_TYPE) %>%
count()
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE), family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
exp(coef(logistic_model))
glm_df <- rbind(roadkill_df, random_df) %>%
filter(MEDIAN_TYPE != 3) %>%
filter(MEDIAN_TYPE != 4) %>%
filter(MEDIAN_TYPE != 5)
glm_summary <- glm_df %>%
group_by(roadkill, MEDIAN_TYPE) %>%
count()
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE), family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
exp(coef(logistic_model))
glm_df <- rbind(roadkill_df, random_df) #%>%
glm_summary <- glm_df %>%
group_by(roadkill, MEDIAN_TYPE) %>%
count()
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE), family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
exp(coef(logistic_model))
glm_summary
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE), family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
exp(coef(logistic_model))
# Fit a logistic regression model
logistic_model <- glm(roadkill ~ as.factor(MEDIAN_TYPE) + MEDIAN_WIDTH + AADT + LANE_WIDTH, family = binomial(link = "logit"), data = glm_df)
summary(logistic_model)
exp(coef(logistic_model))
library(readxl)
# Roadkill w/in 50m of highways
cros <- read_excel("D:\\Downloads\\cros_hpms_2016_50m_TableToExcel.xlsx")
# Roadkill w/in 50m of highways
cros <- read.csv("D:\\Downloads\\cros_hpms_2016_50m.csv")
View(cros)
# Roadkill w/in 50m of highways
cros <- read_excel("D:\\Downloads\\cros_hpms_2016_50m.xlsx")
